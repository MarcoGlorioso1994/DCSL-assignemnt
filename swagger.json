{
  "openapi": "3.0.0",
  "info": {
    "description": "This is documentation for the DCSL assignment",
    "version": "1.0.0",
    "title": "DCSL Assignment"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:4000/",
      "description": "localhost address"
    }
  ],
  "paths": {
    "/planets": {
      "post": {
        "tags": [
          "Planets"
        ],
        "summary": "Method to create a new planet",
        "description": "Accepts the upper-right coordinates of the rectangular world and it will create a planet instance",
        "parameters": [],
        "requestBody": {
          "description": "Upper right coordinates",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpperRight"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/robots": {
      "post": {
        "tags": [
          "Robots"
        ],
        "summary": "Method to create a new robot",
        "description": "Accepts the start grid position, the orientation and the path of a robot. The endpoint is used to save one robot. Multiple requests will give you the possibility to save multiple robots.",
        "parameters": [],
        "requestBody": {
          "description": "Robot position and path",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RobotPosPath"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/robots/results": {
      "get": {
        "tags": [
          "Robots"
        ],
        "summary": "Return the final postions and status",
        "description": "Returns the final positions of each robot. It will return the final position of all created robots.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Output"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UpperRight":{
        "type":"object",
        "required":[
          "upperBounds"
        ],
        "properties":{
          "upperBounds":{
            "type": "string"
          }
        }      
      },
      "RobotPosPath":{
        "type":"object",
        "required":[
          "coordinates",
          "path"
        ],
        "properties":{
          "coordinates":{
            "type": "string"
          },
          "path":{
            "type": "string"
          }
        }      
      },
      "InitResp":{
        "type":"object",
        "required":[
          "code",
          "message"
        ],
        "properties":{
          "code":{
            "type": "integer"
          },
          "message":{
            "type": "string"
          }
        }      
      },
      "Output":{
        "type":"object",
        "required":[
          "code",
          "output"
        ],
        "properties":{
          "code":{
            "type": "integer"
          },
          "output":{
            "type": "string"
          }
        }      
      }
    }
  }
}